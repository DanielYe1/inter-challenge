openapi: 3.0.0
info:
  description: Aplicação base de usuários e cálculo de soma de digitos
  version: 1.0.0
  title: Aplicação inter
tags:
  - name: user
    description: ""
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /user:
    post:
      tags:
        - user
      summary: Adiciona um novo usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUser"
        description: Adiciona um novo usuario a base
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"
    get:
      tags:
        - user
      summary: Busca todos os usuários
      description: Retorna uma lista com todos os usuários encontrados na base
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseUser"
  "/user/{userId}":
    get:
      tags:
        - user
      summary: Busca usuário por ID
      description: Retorna o usuário com o id dado
      parameters:
        - name: userId
          in: path
          description: Id do usuário
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUser"
        "404":
          description: usuário não encontrado
    put:
      tags:
        - user
      summary: Atualiza dados básicos do usuário
      parameters:
        - name: userId
          in: path
          description: Id do usuário
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUser"
        description: dados a serem atualizados referentes ao objeto, é necessário que todos
          os dados sejam informados.
        required: true
      responses:
        "204":
          description: atualização com sucesso
        "404":
          description: usuário não encontrado
    delete:
      tags:
        - user
      summary: Deleta um usuário
      description: ""
      parameters:
        - name: userId
          in: path
          description: Id do usuário
          required: true
          schema:
            type: string
      responses:
        "204":
          description: usuário deletado
  /user/check:
    post:
      tags:
        - user
      summary: Calcula novo valor e adiciona a usuário caso exista
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCheckDigit"
        description: "'n' é o valor do número a ser calculado e 'k' a quantidade de vezes
          que a string 'n' se repete"
        required: true
      responses:
        "200":
          description: valor calculado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCheckDigit"
        "422":
          description: valor inválido de entrada
  /user/key:
    post:
      tags:
        - user
      summary: Salva chave publica do usuário
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserKey"
        description: "'n' é o valor do número a ser calculado e 'k' a quantidade de vezes
          que a string 'n' se repete"
        required: true
      responses:
        "201":
          description: Created
servers:
  - url: /
components:
  schemas:
    RequestUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    ResponseUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        checkDigits:
          type: array
          items:
            $ref: "#/components/schemas/ResponseCheckDigit"
    UserKey:
      type: object
      properties:
        userId:
          type: string
        publicKeyString:
          type: string
    ResponseCheckDigit:
      type: object
      properties:
        value:
          type: string
        numberTimes:
          type: integer
        digit:
          type: integer
    RequestCheckDigit:
      type: object
      properties:
        userId:
          type: string
        n:
          type: string
        k:
          type: integer